name: Build APK

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    # إنشاء build.gradle إذا كان مفقودًا
    - name: Create build.gradle if not exists
      run: |
        if [ ! -f "build.gradle" ]; then
          echo "Creating build.gradle"
          echo "
buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.0.2'
    }
}

plugins {
    id 'com.android.application' version '8.0.2' apply false
    id 'org.jetbrains.kotlin.android' version '1.7.21' apply false
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'com.android.application'
    android {
        compileSdk 33
        defaultConfig {
            applicationId 'com.example.smssender'
            minSdk 21
            targetSdk 33
            versionCode 1
            versionName '1.0'
        }
        buildTypes {
            release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            }
        }
    }
}" > build.gradle
        fi

    # إنشاء Gradle Wrapper
    - name: Create Gradle Wrapper
      run: |
        if [ ! -f "gradlew" ]; then
          echo "Creating gradle wrapper"
          gradle wrapper
        fi

    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew

    - name: Build APK
      run: ./gradlew assembleDebug

    - name: Check APK exists
      run: ls -la app/build/outputs/apk/debug

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: app-debug.apk
        path: app/build/outputs/apk/debug/app-debug.apk
